openapi: 3.0.3
info:
  title: Agreement Management Micro Service
  description: 'This is a sample server'
  version: 0.0.1
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  #  - url: https://gateway.interop.pdnd.dev/pdnd-interop-uservice-catalog-management/0.0.1
  - url: /pdnd-interop-uservice-catalog-management/0.0.1
    description: This service is eservice manager
#security:
#  - bearerAuth: [ ]
tags:
  - name: e_service
    description: Everything about your E-service
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /eservice:
    post:
      tags:
        - e_service
      summary: Add a new e-service
      operationId: addEService
      requestBody:
        description: A E-Service seed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EService'
        required: true
      responses:
        "200":
          description: EService created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EService'
        "405":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    get:
      tags:
        - e_service
      summary: Retrieve a list of e-service
      operationId: getEServices
      parameters:
        - in: query
          name: producer_id
          schema:
            type: string
        - in: query
          name: consumer_id
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum: [ draft, active, suspended ]
        - in: query
          name: from
          schema:
            type: integer
            format: int32
        - in: query
          name: to
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A list of EService
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EServices'
  /eservice/{eservice_id}:
    get:
      tags:
        - e_service
      summary: Get a e-service
      operationId: getEService
      parameters:
        - name: eservice_id
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: EService retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EService'
        '404':
          description: EService not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  schemas:
    EService:
      type: object
      required:
        - name
        - versions
        - description
      properties:
        id:
          type: string
          format: uuid
        producer:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 64
          minLength: 6
        description:
          type: string
          maxLength: 64
          minLength: 6
        scopes:
          type: array
          items:
            type: string
        versions:
          type: array
          items:
            $ref: '#/components/schemas/EServiceVersion'
        status:
          type: string
          enum: [ 'active' ]
    EServiceVersion:
      type: object
      required:
        - version
        - docs
      properties:
        id:
          type: string
          format: uuid
        version:
          type: string
        docs:
          type: array
          items:
            type: string
        proposal:
          type: array
          items:
            type: string
    EServices:
      type: array
      items:
        $ref: '#/components/schemas/EService'
    Problem:
      properties:
        detail:
          description:
            A human readable explanation specific to this occurrence of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
        status:
          description:
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description:
            A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: '^[ -~]{0,64}$'
          type: string
      additionalProperties: false
      required:
        - status
        - title